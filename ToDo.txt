MVP
Show board
	-Create a 6 by 7 row of holds
	-render all the holds
	-reverse the render order
	-Give each hold a color
	-Map an array of colors to each hold
	-create a suffle command
	-Make each hold a random color

Cards
	-create card component
	-display cards
	-generate (draw pile) of card data
	-suffle the card data
	-display the first two cards in the array
	-display number of a cards dynamically
	-display color on cards
	-colors are displayed dynamically
Controls
	-display draw button
	-change the draw index when the draw button is pressed
	-Hide the draw button when there are no cards left to draw
	-Only display as many cards in the last set

Limbs
	-display limbs on all the holds
	-make top limbs visible over the hold
	-conditionally display limbs on holds
	-pass in limbs to display as properties
	-display limbs on two rows below the holds
	-display weight
	-Select limb to make it active
	-Obtain coordinates of seleced hold
	-Set limb coordinates of active limbs to coordinates of selected hold 
	-Set isAtStart to false when moved to a new coordinate
	
Cleanup
	-refactor limb attributes to be an object
	-Seperate Hold data from limb data when passing it into tile
	-Use active from limbData object

Rules:
	-Come up with the a list of rules an the order in which to implement them

Limited Distance Rules:	
	-Calculate distance between two coords tool
	-Limbs can only move distance of 1
	-Create limb groups
	-limbs in group cannot be > 3 apart
	-Can't select same hold as limb starts on
	
Extra
	-Make selected limb different color
	
Move according to card:
	-Create card permutations tools
	-Remove permutations that do not follow a move sequence
	-Limbs moved create a sequence
	-Limbs movement must match the sequence of a permutation
	
Cleanup:
	-Replace at start with -1 row index
	
	holdHandleClick only calls move limb if a limb is selected

Start rule
	-Ignore distance of 1 rule when moving from start 
	-Limbs can only move to row 1 when moving from start
	

Weight Epic:
	Formatting:
		-Make tile a grid?
		-Make weight selectable
	
	Changes to cards
		-Add weight directions to cards
		-Display weight direction on card
	
	Board tool:
		-Determine if a hold is left or right
	
	Weight Rules:
		-Weight ignores color rules
		-Weight can only be moved during the direction section of a card 
		-Weight only moves left and right instead of to a color
		-Weight cannot be higher than hands
		-Weight cannot be lower than feet

Wilds
	-Accept array into transverseOjbect/Rename
	
	-weight wild move is converted to an array of all directions
		(this is to handle leaving start)
	-Weight move from start is a wild
	-Weight moves are always converted to an array that includes wild

Weight on a limb makes the opposite limb free (left hand frees right hand)
	-Color wilds are converted to an array of all colors while checking the move tree
	-Store a limbWild move in the history if weight conditions are met
	-Limbs with weight are not selectable

Convert Cards to weightWild
	-Add wild state to cards
	-Add toogle button to card
	-Toggle wild state when selecting the card
	-Display wild move when wild is true
	-Factor card wild state into move tree
	-Prevent toggling card wild state if the move tree can no longer be satisfied
	
Clean Up
	-make drawPile useRef
	-Rename getDrawnCards
	-Rename draw cards button
	-Evalute where we are using global state vs local state...
	
Less important rules	
	-Only one limb per hold:
	-Only one limb is selectable at a time

Moves are undo-able
	-look at react tic-tac-toe example	
	
Extras
	-make the limbs images

Mark Used Cards:
	-Cards are marked as unusable if all future moves in the tree do not include that card
	-Colors are marked as unusable if all future moved do not include that (card AND color) combo 
		This works for directions as well
	
Bug:
	-Have three cards, make the second one wildmove, use it, the remaining cards report as the first two cards
	-On the last round something crashes

Usability
	-Show the number of cards left
	
Rules:
	-Hands can move to the second row from start

clean up
	-Consolidate topFirst and topOnly functions in generate move tree
	Refactor game into sub components:
		User controls
		Board
	Validate move returns a boolean
	Correct flatten moves to not include duplicates
	Add documentation
	
Game play:
	Make the game more difficult:
		-No moving limbs directly below weight (test in game)
		Foot only, hand only holds (test in game)
			-Add foot only, hand only to hold data
			-Display the holds different
			-Check for group type match during validate step
			-Refactor: 
				-Use groupTypes in hold
		Holds can't support weight
			Add weight limits to holds
			Display holds with weight limits (black streaks on holds)
			Check that weight is not in range of a limb on the weight limited holds
		Use hand then foot or foot then hand if you want to use both parts of a card
		You only get one wild per time the weight and limb share a space
		Weight shifts when a wild is used
	
	Special powers ideas:
		Power up ideas
			Bumping through foot holds
			Extra limb movement
			See one of the colors of the next card
			Use foot hold as a hand hold and vis versa
			One limb can be plus 1 away
			Bonus weigh move
			Extra wilds when wild and limb share a space
			Ignore wieght rule for a hold
		Earn power ups
			Using all parts of a card
			Moving limbs sideways
			Getting to specific holds
			Performing a move (heel hook,Dynamo)
	Other Ideas:
		Flagging a foot means that neither of your feet can move, weight moves towards the foot that was flagged. It takes up a move color to perform (color needs to match the color the foot was on?)
		

Less important rules	
	-Only one limb per hold:
	Feet can't move above hands:
	left can't be more than 1 to the right of right:
	Weight can only be one to the left and one the right of the extreme limbs

Edge Cases:
	limbs not in group cannot be more than double max the distance apart 
		(this covers the edge case where leftHand is on the wall, then right foot is placed on the wall froms start)
	
Cleanup Round 2
	Seperate tile generation from hold mapping
	Change group check to validate all groups instead of just the one that got moved
	Implement Redux in Game first
	
Usability Round 2
	Save game somehow
	Display History
	Add redo ability
	Flip the cards around to show the way the arrow is going
	
	
	

